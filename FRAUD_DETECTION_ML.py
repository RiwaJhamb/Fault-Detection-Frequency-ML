# -*- coding: utf-8 -*-
"""Untitled11.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e_6LetUv39dKG7RzgLGpQOtvckI5kI38
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.ensemble import AdaBoostClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from sklearn.preprocessing import StandardScaler

np.random.seed(42)
n_samples = 1000
n_features = 10

X = np.random.normal(loc=50, scale=10, size=(n_samples, n_features))
y = np.random.choice([0, 1], size=n_samples, p=[0.7, 0.3])

feature_names = [f'Frequency_{i+1}' for i in range(n_features)]
df = pd.DataFrame(X, columns=feature_names)
df['Target'] = y

print("Sample Data:\n", df.head())

X = df.drop('Target', axis=1)
y = df['Target']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

base_estimator = DecisionTreeClassifier(max_depth=1, random_state=42)
ada_clf = AdaBoostClassifier(estimator=base_estimator, n_estimators=50, learning_rate=1.0, random_state=42)

ada_clf.fit(X_train, y_train)

y_pred = ada_clf.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
print(f'\nModel Accuracy: {accuracy:.2f}')

class_report = classification_report(y_test, y_pred, target_names=['Normal', 'Faulty'])
print('\nClassification Report:\n', class_report)

conf_matrix = confusion_matrix(y_test, y_pred)

plt.figure(figsize=(8, 6))
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues',
            xticklabels=['Predicted Normal', 'Predicted Faulty'],
            yticklabels=['Actual Normal', 'Actual Faulty'])
plt.xlabel('Predicted Label')
plt.ylabel('True Label')
plt.title('Confusion Matrix')
plt.show()

